{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/material/material.module.ts","./src/app/quiz/failure/failure.component.ts","./src/app/quiz/failure/failure.component.html","./src/app/quiz/instructions/instructions.component.ts","./src/app/quiz/instructions/instructions.component.html","./src/app/quiz/question/question.component.ts","./src/app/quiz/question/question.component.html","./src/app/quiz/quiz-routing.module.ts","./src/app/quiz/quiz.module.ts","./src/app/quiz/start/start.component.ts","./src/app/quiz/start/start.component.html","./src/app/quiz/success/success.component.ts","./src/app/quiz/success/success.component.html","./src/app/quiz/thankyou/thankyou.component.ts","./src/app/quiz/thankyou/thankyou.component.html","./src/app/services/register.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./auth/auth.module\": \"./src/app/auth/auth.module.ts\",\n\t\"./quiz/quiz.module\": \"./src/app/quiz/quiz.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\n\n\nconst routes: Routes = [\n  { path: '', loadChildren: './auth/auth.module#AuthModule' },\n  { path: 'quiz', loadChildren: './quiz/quiz.module#QuizModule' },\n  { path: '**', redirectTo: 'register' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { PathLocationStrategy, LocationStrategy } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [Location, {provide: LocationStrategy, useClass: PathLocationStrategy}]\n})\nexport class AppComponent {\n  title = 'Quiz Concept';\n  constructor(){\n\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport {LocationStrategy, APP_BASE_HREF, HashLocationStrategy} from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AuthModule } from './auth/auth.module';\nimport { QuizModule } from './quiz/quiz.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AuthModule,\n    QuizModule,\n    AppRoutingModule,\n    MaterialModule,\n    RouterModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: LocationStrategy, useClass: HashLocationStrategy},\n    { provide: APP_BASE_HREF, useValue: window['_app_base'] || '/' }\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [ {\n  path: '',\n  children: [\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n  ]\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>auth works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthComponent } from './auth.component';\nimport { MaterialModule } from '../material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, AuthComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    AuthRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"auth_page\">\n        <div class=\"login_Form\">\n            <mat-card>\n                <h2>Login</h2>\n            <form novalidate>\n                <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n                    <mat-label>Your Email</mat-label>\n                    <input matInput>\n                  </mat-form-field>\n\n\n                <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n                    <mat-label>Your Password</mat-label>\n                    <input matInput type=\"password\">\n                  </mat-form-field>\n\n                  <button mat-raised-button color=\"primary\">Login</button>\n\n            </form>\n        </mat-card>\n        </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { User } from '../../models/user';\nimport { registerService } from 'src/app/services/register';\n\ninterface Dropdown {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  hide = true;\n  regForm: FormGroup;\n  selectedGender: string = 'male';\n\n\n  locations: Dropdown[] = [\n    { value: 'us', viewValue: 'United States' },\n    { value: 'china', viewValue: 'China' },\n    { value: 'india', viewValue: 'India' }\n  ];\n\n  selectedLocation = this.locations[0].value;\n\n  quiztypes: Dropdown[] = [\n    { value: 'engineering', viewValue: 'Engineering' },\n    { value: 'management', viewValue: 'Management' },\n  ];\n\n  selectedQuizType = this.quiztypes[0].value;\n\n  name: any;\n  email: any;\n  password: any;\n  sucessmessage: string = null;\n  errormessage: string = null;\n\n  constructor(private fb: FormBuilder, private registerService: registerService) {\n\n    this.regForm = this.fb.group({\n      'name': [null, Validators.required],\n      'email': [null, [Validators.required, Validators.email]],\n      'password': [null, Validators.required],\n      'location': [null],\n      'gender': [null],\n      'quiztype': [null]\n    })\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  markFormGroupTouched(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach((control: FormGroup) => {\n      control.markAsTouched();\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  register() {\n\n    this.markFormGroupTouched(this.regForm);\n    if (this.regForm.valid) {\n      this.registerService.register(this.regForm.getRawValue()).subscribe((res: any) => {\n        if (res.messsage) {\n          this.sucessmessage = res.message;\n        }\n      }, (error) => {\n        this.errormessage = error.message;\n      });\n    }\n\n  }\n\n}\n","<section class=\"auth_page\">\n  <div class=\"login_Form\">\n    <mat-card>\n      <h2>Register</h2>\n      <form novalidate [formGroup]=\"regForm\" (ngSubmit)=\"register()\" autocomplete=\"off\">\n\n        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n          <mat-label>Your Name</mat-label>\n          <input matInput formControlName=\"name\">\n          <mat-error *ngIf=\"regForm.get('name').hasError('required') && regForm.get('name').touched\">\n            Please enter name</mat-error>\n        </mat-form-field>\n\n\n        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n          <mat-label>Your Email</mat-label>\n          <input matInput type=\"email\" formControlName=\"email\" autocomplete=\"new-email\">\n          <mat-error *ngIf=\"regForm.get('email').hasError('required') && regForm.get('email').touched\">\n            Please enter email</mat-error>\n          <mat-error\n            *ngIf=\"regForm.get('email').hasError('email') && (regForm.get('email').dirty && regForm.controls['email'].value.length)\">\n            Please enter valid email</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Location</mat-label>\n          <mat-select formControlName=\"location\" [(ngModel)]=\"selectedLocation\">\n            <mat-option *ngFor=\"let location of locations\" [value]=\"location.value\">\n              {{location.viewValue}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"regForm.get('location').hasError('required') && regForm.get('location').touched\">\n            Please select team size</mat-error>\n        </mat-form-field>\n\n        <mat-radio-group aria-label=\"Select an option\" formControlName=\"gender\" [(ngModel)]=\"selectedGender\">\n          <mat-radio-button color=\"primary\" value=\"male\">Male</mat-radio-button>\n          <mat-radio-button color=\"primary\" value=\"female\">Female</mat-radio-button>\n        </mat-radio-group>\n\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Select Quiz Type</mat-label>\n          <mat-select formControlName=\"quiztype\" [(ngModel)]=\"selectedQuizType\">\n            <mat-option *ngFor=\"let quiztype of quiztypes\" [value]=\"quiztype.value\">\n              {{quiztype.viewValue}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n          <mat-label>Your Password</mat-label>\n          <input matInput name=\"password\" autocomplete=\"new-password\" [type]=\"hide ? 'password' : 'text'\"\n            formControlName=\"password\">\n          <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n          <mat-error *ngIf=\"regForm.get('password').hasError('required') && regForm.get('password').touched\">\n            Please enter password</mat-error>\n        </mat-form-field>\n\n\n        <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\n        <div *ngIf=\"sucessmessage\">\n          <span class=\"success\"> {{ sucessmessage }}</span>\n        </div>\n      </form>\n    </mat-card>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-failure',\n  templateUrl: './failure.component.html',\n  styleUrls: ['./failure.component.scss']\n})\nexport class FailureComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<FailureComponent>, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  \n  close(){\n    this.dialogRef.close();\n    this.router.navigateByUrl('thankyou');\n  }\n\n}\n","<h2>Oops! You Have Answered Incorrectly.</h2>\n<div class=\"failure_tick\">\n        <img src=\"assets/emoji.svg\" alt=\"\">\n</div>\n<div class=\"btn_row\">\n        <button mat-flat-button color=\"primary\" (click)=\"close()\">Finish Quiz</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instructions',\n  templateUrl: './instructions.component.html',\n  styleUrls: ['./instructions.component.scss']\n})\nexport class InstructionsComponent implements OnInit {\n\n  time: Date;\n\n  constructor() {\n    this.time = new Date();\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n    <mat-toolbar-row>\n        Instructions\n    </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"wrapper\">\n    <div class=\"container\">\n        <div class=\"main\">\n            <mat-card>\n                <mat-card-title>Instructions To Take Quiz</mat-card-title>\n                <mat-card-subtitle>Time: {{time | date:'shortTime'}}</mat-card-subtitle>\n                <mat-card-content>\n                    <p>This quiz consists of questions carefully designed to help you self-assess\n                        your comprehension of the information on the topics covered.</p>\n                    <p>The total score for the quiz is based on your responses to all questions. </p>\n                    <p> If you respond incorrectly to a question and get the correct response, your quiz score will reflect it appropriately.</p>\n                    <p>However, your quiz will not be graded, if you exit before responding to all\n                        the questions.</p>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button routerLink=\"/question\" mat-flat-button color=\"accent\">Start Quiz</button>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SuccessComponent } from '../success/success.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FailureComponent } from '../failure/failure.component';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  go_back(){\n    window.history.back();\n  }\n\n  success(){\n    const dialogRef = this.dialog.open(SuccessComponent, {\n      disableClose: true\n    });\n  }\n\n  failure(){\n    const dialogRef = this.dialog.open(FailureComponent, {\n      disableClose: true\n    });\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n        <mat-toolbar-row>\n            <button mat-icon-button (click)=\"go_back()\"><mat-icon>arrow_back</mat-icon></button><div class=\"title\">Question 1</div>\n        </mat-toolbar-row>\n    </mat-toolbar>\n<div class=\"question\">\n        <h2>What is the Captital City of Uttar Pradesh?</h2>\n    <div class=\"answers\">\n        <div><button mat-raised-button (click)=\"failure()\"><span class=\"option_tag\">A</span>Ghaziabad</button></div>\n        <div><button mat-raised-button (click)=\"failure()\"><span class=\"option_tag\">B</span>Meerut</button></div>\n        <div><button mat-raised-button (click)=\"success()\"><span class=\"option_tag\">C</span>Lucknow</button></div>\n        <div><button mat-raised-button (click)=\"failure()\"><span class=\"option_tag\">D</span>Kanpur</button></div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StartComponent } from './start/start.component';\nimport { InstructionsComponent } from './instructions/instructions.component';\nimport { QuestionComponent } from './question/question.component';\nimport { ThankyouComponent } from './thankyou/thankyou.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'start', pathMatch: 'full'},\n  { path: 'start', component: StartComponent},\n  { path: 'instructions', component: InstructionsComponent},\n  { path: 'question', component: QuestionComponent},\n  { path: 'thankyou', component: ThankyouComponent},\n  { path: '**', redirectTo: 'register' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class QuizRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { QuizRoutingModule } from './quiz-routing.module';\nimport { MaterialModule } from '../material/material.module';\nimport { StartComponent } from './start/start.component';\nimport { QuestionComponent } from './question/question.component';\nimport { ThankyouComponent } from './thankyou/thankyou.component';\nimport { InstructionsComponent } from './instructions/instructions.component';\nimport { FailureComponent } from './failure/failure.component';\nimport { SuccessComponent } from './success/success.component';\n\n\n@NgModule({\n  declarations: [StartComponent, QuestionComponent, ThankyouComponent, InstructionsComponent, FailureComponent,\n  SuccessComponent],\n  imports: [\n    CommonModule,\n    QuizRoutingModule,\n    MaterialModule\n  ]\n})\nexport class QuizModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n    <mat-toolbar-row>\n      Quiz\n    </mat-toolbar-row>\n  </mat-toolbar>\n  <div class=\"get_started\">\n      <div class=\"get_started_title mat-display-1\">Welcome To The Quiz Concept.</div>\n    <div class=\"get_started_image\">\n      <img src=\"assets/undraw_social_friends_nsbv.svg\" alt=\"\">\n    </div>\n    <div class=\"get_started_button\">\n      <button mat-flat-button color=\"accent\" routerLink=\"/instructions\">Get Started Now</button>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.scss']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<SuccessComponent>,  private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  close(){\n    this.dialogRef.close();\n    this.router.navigateByUrl('thankyou');\n  }\n\n}\n","<h2>Congratulations You Have Answered Correctly</h2>\n<div class=\"success_tick\">\n        <img src=\"assets/geek.svg\" alt=\"\">\n</div>\n<div class=\"btn_row\">\n        <button mat-flat-button color=\"primary\" (click)=\"close()\">Next Question</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-thankyou',\n  templateUrl: './thankyou.component.html',\n  styleUrls: ['./thankyou.component.scss']\n})\nexport class ThankyouComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"thankyou_page\">\n        <h2>Thank You for taking Quiz</h2>\n        <div class=\"thankyou_image\">\n                <img src=\"assets/undraw_landscape_mode_53ej.svg\" alt=\"\">\n        </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class registerService {\n\n  constructor(private http: HttpClient) { }\n\n\n  register(formdata) {\n\n    const data = JSON.stringify(formdata);\n    let headers: HttpHeaders = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n   // headers = headers.append( 'Access-Control-Allow-Origin', '');\n    const options = { headers };\n  \n    return this.http.post<any>('http://devserver.buzz/users/register', formdata, options);\n  }\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}