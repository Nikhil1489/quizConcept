{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/register/register.component.ts","webpack:///src/app/auth/register/register.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/quiz/failure/failure.component.ts","webpack:///src/app/quiz/failure/failure.component.html","webpack:///src/app/quiz/instructions/instructions.component.ts","webpack:///src/app/quiz/instructions/instructions.component.html","webpack:///src/app/quiz/question/question.component.ts","webpack:///src/app/quiz/question/question.component.html","webpack:///src/app/quiz/quiz-routing.module.ts","webpack:///src/app/quiz/quiz.module.ts","webpack:///src/app/quiz/start/start.component.ts","webpack:///src/app/quiz/start/start.component.html","webpack:///src/app/quiz/success/success.component.ts","webpack:///src/app/quiz/success/success.component.html","webpack:///src/app/quiz/thankyou/thankyou.component.ts","webpack:///src/app/quiz/thankyou/thankyou.component.html","webpack:///src/app/services/register.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","id","keys","webpackAsyncContextKeys","Object","module","exports","routes","path","loadChildren","redirectTo","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","title","Location","provide","useClass","selector","templateUrl","styleUrls","providers","AppModule","useValue","window","register","enabled","production","declarations","bootstrap","children","pathMatch","component","AuthRoutingModule","forChild","AuthComponent","AuthModule","LoginComponent","RegisterComponent","fb","registerService","hide","selectedGender","locations","value","viewValue","selectedLocation","quiztypes","selectedQuizType","sucessmessage","errormessage","regForm","group","required","email","formGroup","values","controls","forEach","control","markAsTouched","markFormGroupTouched","valid","getRawValue","subscribe","res","messsage","message","error","MaterialModule","FailureComponent","dialogRef","router","close","navigateByUrl","InstructionsComponent","time","Date","QuestionComponent","dialog","history","back","open","disableClose","go_back","failure","success","QuizRoutingModule","QuizModule","StartComponent","SuccessComponent","ThankyouComponent","http","formdata","data","JSON","stringify","headers","append","options","post","providedIn","environment","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./auth/auth.module\": \"./src/app/auth/auth.module.ts\",\n\t\"./quiz/quiz.module\": \"./src/app/quiz/quiz.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\n\n\nconst routes: Routes = [\n  { path: '', loadChildren: './auth/auth.module#AuthModule' },\n  { path: 'quiz', loadChildren: './quiz/quiz.module#QuizModule' },\n  { path: '**', redirectTo: 'register' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { PathLocationStrategy, LocationStrategy } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [Location, {provide: LocationStrategy, useClass: PathLocationStrategy}]\n})\nexport class AppComponent {\n  title = 'Quiz Concept';\n  constructor(){\n\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport {LocationStrategy, APP_BASE_HREF, HashLocationStrategy} from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AuthModule } from './auth/auth.module';\nimport { QuizModule } from './quiz/quiz.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AuthModule,\n    QuizModule,\n    AppRoutingModule,\n    MaterialModule,\n    RouterModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: LocationStrategy, useClass: HashLocationStrategy},\n    { provide: APP_BASE_HREF, useValue: window['_app_base'] || '/' }\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [ {\n  path: '',\n  children: [\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n  ]\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>auth works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthComponent } from './auth.component';\nimport { MaterialModule } from '../material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, AuthComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    AuthRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"auth_page\">\n        <div class=\"login_Form\">\n            <mat-card>\n                <h2>Login</h2>\n            <form novalidate>\n                <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n                    <mat-label>Your Email</mat-label>\n                    <input matInput>\n                  </mat-form-field>\n\n\n                <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n                    <mat-label>Your Password</mat-label>\n                    <input matInput type=\"password\">\n                  </mat-form-field>\n\n                  <button mat-raised-button color=\"primary\">Login</button>\n\n            </form>\n        </mat-card>\n        </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { User } from '../../models/user';\nimport { registerService } from 'src/app/services/register';\n\ninterface Dropdown {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  hide = true;\n  regForm: FormGroup;\n  selectedGender: string = 'male';\n\n\n  locations: Dropdown[] = [\n    { value: 'us', viewValue: 'United States' },\n    { value: 'china', viewValue: 'China' },\n    { value: 'india', viewValue: 'India' }\n  ];\n\n  selectedLocation = this.locations[0].value;\n\n  quiztypes: Dropdown[] = [\n    { value: 'engineering', viewValue: 'Engineering' },\n    { value: 'management', viewValue: 'Management' },\n  ];\n\n  selectedQuizType = this.quiztypes[0].value;\n\n  name: any;\n  email: any;\n  password: any;\n  sucessmessage: string = null;\n  errormessage: string = null;\n\n  constructor(private fb: FormBuilder, private registerService: registerService) {\n\n    this.regForm = this.fb.group({\n      'name': [null, Validators.required],\n      'email': [null, [Validators.required, Validators.email]],\n      'password': [null, Validators.required],\n      'location': [null],\n      'gender': [null],\n      'quiztype': [null]\n    })\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  markFormGroupTouched(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach((control: FormGroup) => {\n      control.markAsTouched();\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  register() {\n\n    this.markFormGroupTouched(this.regForm);\n    if (this.regForm.valid) {\n      this.registerService.register(this.regForm.getRawValue()).subscribe((res: any) => {\n        if (res.messsage) {\n          this.sucessmessage = res.message;\n        }\n      }, (error) => {\n        this.errormessage = error.message;\n      });\n    }\n\n  }\n\n}\n","<section class=\"auth_page\">\n  <div class=\"login_Form\">\n    <mat-card>\n      <h2>Register</h2>\n      <form novalidate [formGroup]=\"regForm\" (ngSubmit)=\"register()\" autocomplete=\"off\">\n\n        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n          <mat-label>Your Name</mat-label>\n          <input matInput formControlName=\"name\">\n          <mat-error *ngIf=\"regForm.get('name').hasError('required') && regForm.get('name').touched\">\n            Please enter name</mat-error>\n        </mat-form-field>\n\n\n        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n          <mat-label>Your Email</mat-label>\n          <input matInput type=\"email\" formControlName=\"email\" autocomplete=\"new-email\">\n          <mat-error *ngIf=\"regForm.get('email').hasError('required') && regForm.get('email').touched\">\n            Please enter email</mat-error>\n          <mat-error\n            *ngIf=\"regForm.get('email').hasError('email') && (regForm.get('email').dirty && regForm.controls['email'].value.length)\">\n            Please enter valid email</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Location</mat-label>\n          <mat-select formControlName=\"location\" [(ngModel)]=\"selectedLocation\">\n            <mat-option *ngFor=\"let location of locations\" [value]=\"location.value\">\n              {{location.viewValue}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"regForm.get('location').hasError('required') && regForm.get('location').touched\">\n            Please select team size</mat-error>\n        </mat-form-field>\n\n        <mat-radio-group aria-label=\"Select an option\" formControlName=\"gender\" [(ngModel)]=\"selectedGender\">\n          <mat-radio-button color=\"primary\" value=\"male\">Male</mat-radio-button>\n          <mat-radio-button color=\"primary\" value=\"female\">Female</mat-radio-button>\n        </mat-radio-group>\n\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Select Quiz Type</mat-label>\n          <mat-select formControlName=\"quiztype\" [(ngModel)]=\"selectedQuizType\">\n            <mat-option *ngFor=\"let quiztype of quiztypes\" [value]=\"quiztype.value\">\n              {{quiztype.viewValue}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n        <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n          <mat-label>Your Password</mat-label>\n          <input matInput name=\"password\" autocomplete=\"new-password\" [type]=\"hide ? 'password' : 'text'\"\n            formControlName=\"password\">\n          <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n          <mat-error *ngIf=\"regForm.get('password').hasError('required') && regForm.get('password').touched\">\n            Please enter password</mat-error>\n        </mat-form-field>\n\n\n        <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\n        <div *ngIf=\"sucessmessage\">\n          <span class=\"success\"> {{ sucessmessage }}</span>\n        </div>\n      </form>\n    </mat-card>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-failure',\n  templateUrl: './failure.component.html',\n  styleUrls: ['./failure.component.scss']\n})\nexport class FailureComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<FailureComponent>, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  \n  close(){\n    this.dialogRef.close();\n    this.router.navigateByUrl('thankyou');\n  }\n\n}\n","<h2>Oops! You Have Answered Incorrectly.</h2>\n<div class=\"failure_tick\">\n        <img src=\"assets/emoji.svg\" alt=\"\">\n</div>\n<div class=\"btn_row\">\n        <button mat-flat-button color=\"primary\" (click)=\"close()\">Finish Quiz</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instructions',\n  templateUrl: './instructions.component.html',\n  styleUrls: ['./instructions.component.scss']\n})\nexport class InstructionsComponent implements OnInit {\n\n  time: Date;\n\n  constructor() {\n    this.time = new Date();\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n    <mat-toolbar-row>\n        Instructions\n    </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"wrapper\">\n    <div class=\"container\">\n        <div class=\"main\">\n            <mat-card>\n                <mat-card-title>Instructions To Take Quiz</mat-card-title>\n                <mat-card-subtitle>Time: {{time | date:'shortTime'}}</mat-card-subtitle>\n                <mat-card-content>\n                    <p>This quiz consists of questions carefully designed to help you self-assess\n                        your comprehension of the information on the topics covered.</p>\n                    <p>The total score for the quiz is based on your responses to all questions. </p>\n                    <p> If you respond incorrectly to a question and get the correct response, your quiz score will reflect it appropriately.</p>\n                    <p>However, your quiz will not be graded, if you exit before responding to all\n                        the questions.</p>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button routerLink=\"/question\" mat-flat-button color=\"accent\">Start Quiz</button>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SuccessComponent } from '../success/success.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FailureComponent } from '../failure/failure.component';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  go_back(){\n    window.history.back();\n  }\n\n  success(){\n    const dialogRef = this.dialog.open(SuccessComponent, {\n      disableClose: true\n    });\n  }\n\n  failure(){\n    const dialogRef = this.dialog.open(FailureComponent, {\n      disableClose: true\n    });\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n        <mat-toolbar-row>\n            <button mat-icon-button (click)=\"go_back()\"><mat-icon>arrow_back</mat-icon></button><div class=\"title\">Question 1</div>\n        </mat-toolbar-row>\n    </mat-toolbar>\n<div class=\"question\">\n        <h2>What is the Captital City of Uttar Pradesh?</h2>\n    <div class=\"answers\">\n        <div><button mat-raised-button (click)=\"failure()\"><span class=\"option_tag\">A</span>Ghaziabad</button></div>\n        <div><button mat-raised-button (click)=\"failure()\"><span class=\"option_tag\">B</span>Meerut</button></div>\n        <div><button mat-raised-button (click)=\"success()\"><span class=\"option_tag\">C</span>Lucknow</button></div>\n        <div><button mat-raised-button (click)=\"failure()\"><span class=\"option_tag\">D</span>Kanpur</button></div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StartComponent } from './start/start.component';\nimport { InstructionsComponent } from './instructions/instructions.component';\nimport { QuestionComponent } from './question/question.component';\nimport { ThankyouComponent } from './thankyou/thankyou.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'start', pathMatch: 'full'},\n  { path: 'start', component: StartComponent},\n  { path: 'instructions', component: InstructionsComponent},\n  { path: 'question', component: QuestionComponent},\n  { path: 'thankyou', component: ThankyouComponent},\n  { path: '**', redirectTo: 'register' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class QuizRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { QuizRoutingModule } from './quiz-routing.module';\nimport { MaterialModule } from '../material/material.module';\nimport { StartComponent } from './start/start.component';\nimport { QuestionComponent } from './question/question.component';\nimport { ThankyouComponent } from './thankyou/thankyou.component';\nimport { InstructionsComponent } from './instructions/instructions.component';\nimport { FailureComponent } from './failure/failure.component';\nimport { SuccessComponent } from './success/success.component';\n\n\n@NgModule({\n  declarations: [StartComponent, QuestionComponent, ThankyouComponent, InstructionsComponent, FailureComponent,\n  SuccessComponent],\n  imports: [\n    CommonModule,\n    QuizRoutingModule,\n    MaterialModule\n  ]\n})\nexport class QuizModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n    <mat-toolbar-row>\n      Quiz\n    </mat-toolbar-row>\n  </mat-toolbar>\n  <div class=\"get_started\">\n      <div class=\"get_started_title mat-display-1\">Welcome To The Quiz Concept.</div>\n    <div class=\"get_started_image\">\n      <img src=\"assets/undraw_social_friends_nsbv.svg\" alt=\"\">\n    </div>\n    <div class=\"get_started_button\">\n      <button mat-flat-button color=\"accent\" routerLink=\"/instructions\">Get Started Now</button>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.scss']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<SuccessComponent>,  private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  close(){\n    this.dialogRef.close();\n    this.router.navigateByUrl('thankyou');\n  }\n\n}\n","<h2>Congratulations You Have Answered Correctly</h2>\n<div class=\"success_tick\">\n        <img src=\"assets/geek.svg\" alt=\"\">\n</div>\n<div class=\"btn_row\">\n        <button mat-flat-button color=\"primary\" (click)=\"close()\">Next Question</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-thankyou',\n  templateUrl: './thankyou.component.html',\n  styleUrls: ['./thankyou.component.scss']\n})\nexport class ThankyouComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"thankyou_page\">\n        <h2>Thank You for taking Quiz</h2>\n        <div class=\"thankyou_image\">\n                <img src=\"assets/undraw_landscape_mode_53ej.svg\" alt=\"\">\n        </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class registerService {\n\n  constructor(private http: HttpClient) { }\n\n\n  register(formdata) {\n\n    const data = JSON.stringify(formdata);\n    let headers: HttpHeaders = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n   // headers = headers.append( 'Access-Control-Allow-Origin', '');\n    const options = { headers };\n  \n    return this.http.post<any>('http://devserver.buzz/users/register', formdata, options);\n  }\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}